{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAW,EAAG,EAAM,gBAAgB,CAAC,OACrC,EAAQ,EAAM,aAAa,CAAC,SAE5B,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAElC,EAAY,SAAC,CAAnB,EAAyB,OAAA,OAAO,EAAE,OAAO,CAAC,aAAc,I,EAExD,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAC/C,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,QAErD,AAAI,OAAO,EAAU,IACZ,EAAU,GAAS,EAAU,GAG/B,EAAM,aAAa,CAAC,EAC7B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"table\");\nvar headers = _to_consumable_array(table.querySelectorAll(\"th\"));\nvar tbody = table.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\nvar getNumber = function(n) {\n    return Number(n.replace(/[^0-9.-]+/g, \"\"));\n};\nheaders.forEach(function(header, i) {\n    header.addEventListener(\"click\", function() {\n        rows.sort(function(a, b) {\n            var cellA = a.querySelectorAll(\"td\")[i].textContent;\n            var cellB = b.querySelectorAll(\"td\")[i].textContent;\n            if (Number(getNumber(cellA))) return getNumber(cellA) - getNumber(cellB);\n            return cellA.localeCompare(cellB);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.3d286a6e.js.map\n","'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst headers = [...table.querySelectorAll('th')];\nconst tbody = table.querySelector('tbody');\n\nconst rows = [...tbody.querySelectorAll('tr')];\n\nconst getNumber = (n) => Number(n.replace(/[^0-9.-]+/g, ''));\n\nheaders.forEach((header, i) => {\n  header.addEventListener('click', () => {\n    rows.sort((a, b) => {\n      const cellA = a.querySelectorAll('td')[i].textContent;\n      const cellB = b.querySelectorAll('td')[i].textContent;\n\n      if (Number(getNumber(cellA))) {\n        return getNumber(cellA) - getNumber(cellB);\n      }\n\n      return cellA.localeCompare(cellB);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","headers","querySelectorAll","tbody","rows","getNumber","Number","replace","forEach","header","addEventListener","sort","a","b","cellA","textContent","cellB","localeCompare","row","appendChild"],"version":3,"file":"index.3d286a6e.js.map"}